version: 0.2
env:
  variables:
    NAMESPACE: python-web
phases:
  install:
    commands:
      - echo "Initialize the Docker daemon"
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"

      - echo "Installing kubectl"
      - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.10/2023-01-30/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin/kubectl
      - kubectl version --short --client

      - echo "Installing Pytest"
      - pip3 install pytest
  pre_build:
    commands:
      - echo "Login AWS EKS"
#      - aws eks --region eu-west-2 update-kubeconfig --name eks-cluster

      - echo "Logging into Amazon ECR"
      - aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/u9u9i3t6
      - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
  build:
    commands:
      - echo "Running tests"
      - python -m pytest

      - echo "Building the Docker image"
      - docker login --username $DOCKERHUB_USERNAME --password $DOCKERHUB_PASS
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$TAG
  post_build:
    commands:
      - echo "Pushing the Docker images"
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$TAG

      - echo "Deploy to EKS"
#      - kubectl apply -f kubernetes/namespace.yaml
#      - kubectl apply -f kubernetes/service.yaml
#      - kubectl apply -f kubernetes/deployment.yaml
#      - kubectl apply -f kubernetes/ingress.yaml
#      - kubectl set image deploy/$NAMESPACE $REPOSITORY_URI:$TAG -n $NAMESPACE